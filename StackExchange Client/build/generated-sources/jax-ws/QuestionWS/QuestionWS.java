
package QuestionWS;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "QuestionWS", targetNamespace = "http://QuestionModel/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface QuestionWS {


    /**
     * 
     * @param title
     * @param content
     * @param token
     * @return
     *     returns int
     * @throws ParseException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.CreateQuestion")
    @ResponseWrapper(localName = "createQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.CreateQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/createQuestionRequest", output = "http://QuestionModel/QuestionWS/createQuestionResponse", fault = {
        @FaultAction(className = ParseException_Exception.class, value = "http://QuestionModel/QuestionWS/createQuestion/Fault/ParseException")
    })
    public int createQuestion(
        @WebParam(name = "token", targetNamespace = "")
        String token,
        @WebParam(name = "title", targetNamespace = "")
        String title,
        @WebParam(name = "content", targetNamespace = "")
        String content)
        throws ParseException_Exception
    ;

    /**
     * 
     * @return
     *     returns java.util.List<QuestionWS.Question>
     */
    @WebMethod(operationName = "GetAllQuestion")
    @WebResult(name = "Question", targetNamespace = "")
    @RequestWrapper(localName = "GetAllQuestion", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetAllQuestion")
    @ResponseWrapper(localName = "GetAllQuestionResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetAllQuestionResponse")
    @Action(input = "http://QuestionModel/QuestionWS/GetAllQuestionRequest", output = "http://QuestionModel/QuestionWS/GetAllQuestionResponse")
    public List<Question> getAllQuestion();

    /**
     * 
     * @param id
     * @return
     *     returns QuestionWS.Question
     */
    @WebMethod(operationName = "GetQuestionByID")
    @WebResult(name = "QuestionByID", targetNamespace = "")
    @RequestWrapper(localName = "GetQuestionByID", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionByID")
    @ResponseWrapper(localName = "GetQuestionByIDResponse", targetNamespace = "http://QuestionModel/", className = "QuestionWS.GetQuestionByIDResponse")
    @Action(input = "http://QuestionModel/QuestionWS/GetQuestionByIDRequest", output = "http://QuestionModel/QuestionWS/GetQuestionByIDResponse")
    public Question getQuestionByID(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
